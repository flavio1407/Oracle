Fl√°vio Azevedo

--Consulta Quebra campo em colulas seprado por caracter , Quebra linha em colunas, Converte linha em colunas
1)
SELECT 
  REGEXP_SUBSTR('A-B-C-D','[^-]+', 1, LEVEL) AS RESULTADO
FROM   DUAL 
CONNECT BY REGEXP_SUBSTR('A-B-C-D', '[^-]+', 1, LEVEL) IS NOT NULL;
RESULTADO;
A
B
C
D



2)
SELECT REGEXP_SUBSTR(INFO, SEPARADOR, 1, LEVEL) INFO
  FROM (SELECT '1245;45678;7789;64646;4478' INFO, '[^;]+' SEPARADOR
          FROM DUAL)
CONNECT BY REGEXP_SUBSTR(INFO, SEPARADOR, 1, LEVEL) IS NOT NULL;

RESULTADO:
INFO
1245
45678
7789
64646
4478


3) Usanso PIPELINED

CREATE OR REPLACE PACKAGE PKG_SEPARA AS
  TYPE LINHAS IS TABLE OF VARCHAR2(32000);
  FUNCTION EXPLODIR(P_STRING IN CLOB, P_DELIMITER IN VARCHAR2) RETURN LINHAS
    PIPELINED;
END PKG_SEPARA;
/

CREATE OR REPLACE PACKAGE BODY PKG_SEPARA AS
FUNCTION EXPLODIR(P_STRING IN CLOB, P_DELIMITER IN VARCHAR2) RETURN LINHAS PIPELINED AS
V_LINHA VARCHAR2(32000); V_CONT NUMBER := 1; V_ATE NUMBER;
BEGIN
LOOP V_ATE := INSTR(SUBSTR(P_STRING, V_CONT), P_DELIMITER); IF (V_ATE = 0 AND V_CONT < LENGTH(P_STRING)) THEN V_ATE := LENGTH(P_STRING);
END IF; V_LINHA := SUBSTR(SUBSTR(P_STRING, V_CONT), 1, V_ATE - 1); V_CONT := V_CONT + V_ATE; EXIT WHEN TRIM(V_LINHA) IS
NULL; PIPE ROW(V_LINHA);
END LOOP;
END EXPLODIR;
END PKG_SEPARA;
/

SELECT * FROM TABLE(PKG_SEPARA.EXPLODIR('1245;45678;7789;64646;4478', ';'));
RESULTADO:
1245
45678
7789
64646
4478
